{"vulnerability":"Unchecked_Asset_Receiver","smart_contract":"from pyteal import *\n\ndef approval_program():\n    creator = App.globalGet(Bytes(\"Creator\"))\n\n    handle_creation = Seq([\n        App.globalPut(Bytes(\"Creator\"), Txn.sender()),\n        Return(Int(1))\n    ])\n\n    handle_optin = Return(Int(1))\n\n    handle_closeout = Return(Int(1))\n\n    handle_updateapp = Seq([\n        Assert(Txn.sender() == creator), \n        Return(Int(1))\n    ])\n\n    handle_deleteapp = Seq([\n        Assert(Txn.sender() == creator), \n        Return(Int(1))\n    ])\n\n    handle_noop = Seq([\n        Assert(Txn.application_args.length() == Int(1)),\n        Assert(Txn.application_args[0] == Bytes(\"transfer\")),\n        Assert(Txn.assets.length() == Int(1)),\n        Assert(Txn.asset_amount() > Int(0)),\n        InnerTxnBuilder.Begin(),\n        InnerTxnBuilder.SetFields({\n            TxnField.type_enum: TxnType.AssetTransfer,\n            TxnField.asset_receiver: Txn.accounts[1],\n            TxnField.asset_amount: Txn.asset_amount(),\n            TxnField.xfer_asset: Txn.assets[0]\n        }),\n        InnerTxnBuilder.Submit(),\n        Return(Int(1))\n    ])\n\n    program = Cond(\n        [Txn.application_id() == Int(0), handle_creation],\n        [Txn.on_completion() == OnComplete.OptIn, handle_optin],\n        [Txn.on_completion() == OnComplete.CloseOut, handle_closeout],\n        [Txn.on_completion() == OnComplete.UpdateApplication, handle_updateapp],\n        [Txn.on_completion() == OnComplete.DeleteApplication, handle_deleteapp],\n        [Txn.on_completion() == OnComplete.NoOp, handle_noop]\n    )\n\n    return program\n\ndef clear_state_program():\n    return Return(Int(1))\n\nif __name__ == \"__main__\":\n    print(compileTeal(approval_program(), mode=Mode.Application, version=2))\n    print(compileTeal(clear_state_program(), mode=Mode.Application, version=2))"}
