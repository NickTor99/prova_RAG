{"vulnerability":"Unchecked_Asset_Receiver","smart_contract":"from pyteal import *\n\ndef asset_exchange_game():\n    min_amount = Int(50)\n    asset_prefix = Bytes(\"asset_\")\n    owner_key = Bytes(\"Owner\")\n\n    on_creation = Seq([\n        App.globalPut(owner_key, Txn.sender()),\n        Return(Int(1))\n    ])\n\n    on_optin = Return(Int(1))\n\n    on_closeout = Return(Int(1))\n\n    on_update = Seq([\n        Assert(Txn.sender() == App.globalGet(owner_key)),\n        Return(Int(1))\n    ])\n\n    on_delete = Seq([\n        Assert(Txn.sender() == App.globalGet(owner_key)),\n        Return(Int(1))\n    ])\n\n    on_exchange_1 = Seq([\n        Assert(\n            And(\n                Txn.group_index() == Int(1),\n                Gtxn[0].type_enum() == TxnType.AssetTransfer,\n                Gtxn[1].type_enum() == TxnType.ApplicationCall,\n                Gtxn[0].xfer_asset() == Gtxn[1].assets[0],\n                Gtxn[0].asset_amount() >= min_amount\n            )\n        ),\n        App.globalPut(Concat(asset_prefix, Txn.accounts[1]), Gtxn[0].asset_amount()),\n        Approve()\n    ])\n\n    on_exchange_2 = Seq([\n        Assert(\n            And(\n                Txn.group_index() == Int(2),\n                Gtxn[0].type_enum() == TxnType.AssetTransfer,\n                Gtxn[2].type_enum() == TxnType.ApplicationCall,\n                Gtxn[0].xfer_asset() == Gtxn[2].assets[0],\n                Gtxn[0].asset_amount() >= min_amount\n            )\n        ),\n        App.globalPut(Concat(asset_prefix, Txn.accounts[2]), Gtxn[0].asset_amount()),\n        Approve()\n    ])\n\n    on_exchange_3 = Seq([\n        Assert(\n            And(\n                Txn.group_index() == Int(3),\n                Gtxn[0].type_enum() == TxnType.AssetTransfer,\n                Gtxn[3].type_enum() == TxnType.ApplicationCall,\n                Gtxn[0].xfer_asset() == Gtxn[3].assets[0],\n                Gtxn[0].asset_amount() >= min_amount\n            )\n        ),\n        App.globalPut(Concat(asset_prefix, Txn.accounts[3]), Gtxn[0].asset_amount()),\n        Approve()\n    ])\n\n    program = Cond(\n        [Txn.application_id() == Int(0), on_creation],\n        [Txn.on_completion() == OnComplete.OptIn, on_optin],\n        [Txn.on_completion() == OnComplete.CloseOut, on_closeout],\n        [Txn.on_completion() == OnComplete.UpdateApplication, on_update],\n        [Txn.on_completion() == OnComplete.DeleteApplication, on_delete],\n        [Txn.on_completion() == OnComplete.NoOp, Cond(\n            [Txn.application_args[0] == Bytes(\"exchange_1\"), on_exchange_1],\n            [Txn.application_args[0] == Bytes(\"exchange_2\"), on_exchange_2],\n            [Txn.application_args[0] == Bytes(\"exchange_3\"), on_exchange_3]\n        )]\n    )\n\n    return program\n\ndef clear_state():\n    return Return(Int(1))\n\nif __name__ == \"__main__\":\n    print(compileTeal(asset_exchange_game(), mode=Mode.Application, version=5))"}
