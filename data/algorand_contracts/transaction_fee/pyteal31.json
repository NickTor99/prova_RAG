{"vulnerability":"transaction_fee","smart_contract":"from pyteal import *\n\ndef transaction_verification():\n    basic_checks = And(Txn.type_enum() == TxnType.Payment, Txn.sender() != Addr(\"ZOEAMKDD6L3ZE3WGZN7PUNTLQ4D7WMIANNDUCTP3SGIMFPPVWU7NR7PCIM\"), Txn.receiver() == Addr(\"2YINOKV3CN6PLHYXTLECTB5V6YQWP2SXGGDJUY2CDXLVHB3GOHG4WKEVCU\"), Txn.rekey_to() == Global.zero_address(), Txn.close_remainder_to() == Global.zero_address(), Txn.amount() > Int(100), Txn.group_index() != Int(0))\n    other_txn_checks = And(Gtxn[1].type_enum() == TxnType.Payment, Gtxn[1].rekey_to() == Global.zero_address(), Gtxn[1].close_remainder_to() == Global.zero_address(), Gtxn[1].sender() != Addr(\"YFH2ZJ43FNV75M2XYU4SRMKE6CXKVS7EECPOCDCTENW4OITFCPHESN74XI\"), Gtxn[1].group_index() == Int(1))\n    extra_txn_checks = And(Gtxn[2].type_enum() == TxnType.AssetTransfer, Gtxn[2].asset_receiver() == Addr(\"P3YBXEZ6I2XSCQVRD2ECOJ544W4K6B6JYKPE3R2TYHYLQKIH56N6MPE2HA\"), Gtxn[2].asset_amount() == Int(1),  Gtxn[2].fee() <= Int(1500), Gtxn[2].rekey_to() == Global.zero_address(), Gtxn[2].asset_close_to() == Global.zero_address())\n    program = And(basic_checks, other_txn_checks, extra_txn_checks)\n    return program\n\nif __name__ == \"__main__\":\n    print(compileTeal(transaction_verification(), mode=Mode.Signature, version=4))\n\n"}
