{"vulnerability":"transaction_fee","smart_contract":"\nfrom pyteal import *\n\ndef approval_program():\n    fee_limit = Int(2000)\n    asset_id = Int(654321)\n    asset_receiver = Addr(\"QZYC3VHRXWYHNFU5OQZCO5OGV6Y5BQ3U6NBCOJPG5CE3KKLJC3QFNKBJW4\")\n    amount = Int(100)\n\n    def check_payment(idx, recv, amt):\n        return And(\n            Gtxn[idx].type_enum() == TxnType.Payment,\n            Gtxn[idx].receiver() == recv,\n            Gtxn[idx].fee() <= fee_limit,\n            Gtxn[idx].close_remainder_to() == Global.zero_address(),\n            Gtxn[idx].rekey_to() == Global.zero_address(),\n        )\n\n    def validate_asset_transfer(idx, aid, recv, amt):\n        return And(\n            Gtxn[idx].type_enum() == TxnType.AssetTransfer,\n            Gtxn[idx].xfer_asset() == aid,\n            Gtxn[idx].asset_receiver() == recv,\n            Gtxn[idx].asset_close_to() == Global.zero_address(),\n            Gtxn[idx].rekey_to() == Global.zero_address(),\n        )\n\n    def check_opt_in(idx, aid):\n        return And(\n            Gtxn[idx].type_enum() == TxnType.AssetTransfer,\n            Gtxn[idx].xfer_asset() == aid,\n            Gtxn[idx].asset_receiver() == Gtxn[idx].sender(),\n            Gtxn[idx].asset_amount() == Int(0),\n            Gtxn[idx].fee() <= fee_limit,\n            Gtxn[idx].asset_close_to()== Global.zero_address(),\n            Gtxn[idx].rekey_to() == Global.zero_address(),\n        )\n\n    txn_2 = validate_asset_transfer(2, asset_id, asset_receiver, amount)\n    txn_3 = check_opt_in(3, asset_id)\n\n    return And(\n        Global.group_size() == Int(4),\n        check_payment(0, Addr(\"EAF7N2GQPDCON7I5QVJXMFSSTV4J2OY66TOAYPHNGS7W76PCSUHU2RIMSY\"), 2000000),\n        check_payment(1, Addr(\"JLFZ7MYYQOZQQIKISR7X7H4AF6J6TDFPJXH4YCNDOHKIFOODABYX7PEYXM\"), 1000000),\n        txn_2,\n        txn_3\n    )\n\ndef clear_program():\n    return Approve()\n\nif __name__ == \"__main__\":\n    print(compileTeal(approval_program(), mode=Mode.Signature, version=5))"}
