{"vulnerability":"transaction_fee","smart_contract":"from pyteal import *\n\ndef diverse_fee_contract():\n    fee_limit = Int(1000)\n\n    txn1 = Seq([\n        Assert(Txn.fee() <= fee_limit),\n        Assert(Txn.close_remainder_to() == Global.zero_address()),\n        Assert(Txn.asset_close_to() == Global.zero_address()),\n        Assert(Txn.rekey_to() == Global.zero_address()),\n        Return(Int(1))\n    ])\n\n    txn2 = Seq([\n        Assert(And(\n            Txn.close_remainder_to() == Global.zero_address(),\n            Txn.asset_close_to() == Global.zero_address(),\n            Txn.rekey_to() == Global.zero_address()\n        )),\n        Return(Int(1))\n    ])\n\n    txn3 = Seq([\n        Assert(And(\n            Txn.fee() <= fee_limit,\n            Txn.close_remainder_to() == Global.zero_address(),\n            Txn.asset_close_to() == Global.zero_address(),\n            Txn.rekey_to() == Global.zero_address()\n        )),\n        Return(Int(1))\n    ])\n\n    program = Cond(\n        [Txn.group_index() == Int(0), txn1],\n        [Txn.group_index() == Int(1), txn2],\n        [Txn.group_index() == Int(2), txn3]\n    )\n\n    return program\n\nif __name__ == \"__main__\":\n    print(compileTeal(diverse_fee_contract(), mode=Mode.Signature, version=5))"}
