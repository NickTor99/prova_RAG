{"vulnerability":"close_remainder_to","smart_contract":"from pyteal import *\n\ndef periodic_payment():\n    periodic_pay_core = And(\n        Txn.type_enum() == TxnType.Payment,\n        Txn.fee() <= Int(1000),\n        Txn.first_valid() % Int(50) == Int(0),\n        Txn.last_valid() <= Int(5000) + Txn.first_valid(),\n        Txn.lease() == Bytes(\"base64\", \"023sdDE2\"),\n        Txn.rekey_to() == Global.zero_address(),\n    )\n\n    periodic_pay_transfer = And(\n        Txn.receiver() == Addr(\"6ZHGHH5Z5CTPCF5WCESXMGRSVK7QJETR63M3NY5FJCUYDHO57VTCMJOBGY\"),\n        Txn.amount() == Int(2000),\n    )\n\n    periodic_pay_close = And(\n        Txn.receiver() == Global.zero_address(),\n        Txn.first_valid() == Int(30000),\n        Txn.amount() == Int(0),\n    )\n\n    periodic_pay_escrow = And(\n        periodic_pay_core,\n        Or(periodic_pay_transfer, periodic_pay_close)\n    )\n\n    return periodic_pay_escrow\n\nif __name__ == '__main__':\n    print(compileTeal(periodic_payment(), mode=Mode.Signature, version=5))\n"}
