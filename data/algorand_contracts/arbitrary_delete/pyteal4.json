{"vulnerability":"arbitrary_delete","smart_contract":"from pyteal import *\n\ndef approval_program():\n\n   \n    initialize_state = Seq([\n        Assert(Txn.application_args.length() == Int(1)),\n        App.globalPut(Bytes(\"initialized\"), Int(1)),\n        Approve()\n    ])\n\n    \n    delete_contract = Approve()\n\n    \n    program = Cond(\n        \n        [Txn.application_id() == Int(0), Seq([\n            App.globalPut(Bytes(\"initialized\"), Int(0)), \n            Approve()\n        ])],\n\n       \n        [Txn.on_completion() == OnComplete.NoOp, Seq([\n            If(\n                Txn.application_args[0] == Bytes(\"initialize\"),\n                initialize_state,\n                Reject()\n            )\n        ])],\n\n       \n        [Txn.on_completion() == OnComplete.DeleteApplication, delete_contract]\n    )\n\n    return program\n\nif __name__ == '__main__':\n    print(compileTeal(approval_program(), mode=Mode.Application, version=5))"}
