{"vulnerability":"arbitrary_delete","smart_contract":"from pyteal import *\n\ndef approval_program():\n    is_delete_application = And(\n        Txn.on_completion() == OnComplete.DeleteApplication,\n        Txn.application_id() != Int(0)\n    )\n\n    is_opt_in = Txn.on_completion() == OnComplete.OptIn\n\n    is_update_application = Txn.on_completion() == OnComplete.UpdateApplication\n\n    is_close_out = Txn.on_completion() == OnComplete.CloseOut\n\n    program = Seq([\n        Assert(Global.latest_timestamp() > Int(0)),\n\n        Cond(\n            [is_delete_application, Seq([\n                Log(Bytes(\"Delete Application\")),\n                Return(Int(1))\n            ])],\n            [is_opt_in, Seq([\n                Log(Bytes(\"Opt-In Transaction\")),\n                Return(Int(1))\n            ])],\n            [is_update_application, Seq([\n                Assert(Txn.sender()==Global.zero_address()),\n                Log(Bytes(\"Update Application\")),\n                Return(Int(1))\n            ])],\n            [is_close_out, Seq([\n                Log(Bytes(\"Close Out\")),\n                Return(Int(1))\n            ])]\n        ),\n\n        Log(Bytes(\"Contratto_approvato\")),\n\n        If(Txn.amount() > Int(1000),\n           Log(Bytes(\"Transazione_superiore_1000_microalgo\")),\n           Log(Bytes(\"Transazione_inferiore_1000_microalgo\"))\n           ),\n\n        If(\n            Txn.rekey_to() != Global.zero_address(),\n            Seq([\n                Log(Bytes(\"Rekey Transaction Detected\")),\n                Return(Int(0))\n            ])\n        ),\n\n        If(\n            Txn.application_args.length() > Int(0),\n            Seq([\n                Log(Bytes(\"Transaction Arguments Provided\")),\n                App.globalPut(Bytes(\"latest_arg\"), Txn.application_args[0])\n            ])\n        ),\n\n        If(\n            Txn.type_enum() == TxnType.Payment,\n            Seq([\n                Log(Bytes(\"Payment Transaction Detected\")),\n                Assert(Txn.amount() > Int(100)),\n                App.globalPut(Bytes(\"last_payment\"), Txn.amount())\n            ])\n        ),\n\n        Return(Int(1))\n    ])\n    return program\n\ndef clear_program():\n    program = Seq([\n        Log(Bytes(\"Clear eseguito\")),\n        Return(Int(1))\n    ])\n    return program\n\nif __name__ == '__main__':\n    print(compileTeal(approval_program(), mode=Mode.Application, version=5))\n"}
