{"vulnerability":"asset_close_to","smart_contract":"from pyteal import *\n\nreceiver_1 = Addr(\"YAONJ4GL4LOS4PQFRUN6OD3Y32HWEVU6PDZVHLAP72T577U4ZCZ5UBH22A\")\nreceiver_2 = Addr(\"3A4MRE7ML6XFTJ6CBCZ7I4GXNBUFZQLUG64LPPLZA6CCKNSCSNY64C2VBM\")\nreceiver_3 = Addr(\"5RDAQNBOW3TNX7FQ2IXLHBVISDJNVLIGLQZWOP25RFOTYH5TR574DZJVM4\")\nreceiver_4 = Addr(\"4MJKG6W4VM3Y6U5U7N7VKVQRP5BIPBOM6UNFJWI4HCPWTK6HPJCJAPVBFU\")\nreceiver_5 = Addr(\"AP5SNRLUFI2RTVF5XXYR4TRL4QXOUCZZ5OU3QMB7FNMD7ABF2LKVDHVV64\")\namount = Int(250000)\ntimeout = Int(120000)\nlease = Bytes(\"base64\", \"dGhpcyBpcyBhIG5ldyBsZWFzZQ==\")\n\ndef five_tx_group_with_vulnerabilities():\n    \n    group_size_check = Global.group_size() == Int(5)\n\n   \n    tx1_check = And(\n        Gtxn[0].type_enum() == TxnType.Payment,\n        Gtxn[0].receiver() == receiver_1,\n        Gtxn[0].amount() == amount,\n        Gtxn[0].close_remainder_to() == Global.zero_address(),\n        Gtxn[0].rekey_to() == Global.zero_address(),\n        Gtxn[0].lease() == lease,\n        Gtxn[0].fee() <= Int(1500),  \n    )\n\n   \n    tx2_check = And(\n        Gtxn[1].type_enum() == TxnType.Payment,\n        Gtxn[1].receiver() == receiver_2,\n        Gtxn[1].amount() == amount \/ Int(2),\n        Gtxn[1].close_remainder_to() == Global.zero_address(),\n        Gtxn[1].rekey_to() == Global.zero_address(),\n        Gtxn[1].fee() <= Int(1500),  \n        Global.latest_timestamp() <= timeout,  \n    )\n\n    \n    tx3_check = And(\n        Gtxn[2].type_enum() == TxnType.Payment,\n        Gtxn[2].receiver() == receiver_3,\n        Gtxn[2].amount() <= amount,\n        Gtxn[2].close_remainder_to() == Global.zero_address(),\n        Gtxn[2].rekey_to() == Global.zero_address(),\n        Gtxn[2].fee() <= Int(1500),  \n    )\n\n    \n    tx4_check = And(\n        Gtxn[3].type_enum() == TxnType.Payment,\n        Gtxn[3].receiver() == receiver_4,\n        Gtxn[3].amount() == amount \/ Int(4),\n        Gtxn[3].close_remainder_to() == Global.zero_address(),\n        Gtxn[3].rekey_to() == Global.zero_address(),\n        Gtxn[3].fee() <= Int(1500)\n    )\n\n    \n    tx5_check = And(\n        Gtxn[4].type_enum() == TxnType.AssetTransfer,  \n        Gtxn[4].receiver() == receiver_5,  \n        Gtxn[4].fee() <= Int(2000),  \n        Gtxn[4].rekey_to() == Global.zero_address(), \n        Gtxn[4].xfer_asset() != Int(0),  \n        Gtxn[4].asset_amount() > Int(10), \n    )\n\n    exclusive_checks = Or(tx1_check, tx2_check, tx3_check)\n\n   \n    program = And(\n        group_size_check,\n        exclusive_checks,\n        Or(tx4_check, tx5_check),  \n    )\n\n    return program\n\nif __name__ == \"__main__\":\n    print(compileTeal(five_tx_group_with_vulnerabilities(), mode=Mode.Signature, version=5))"}
