{"vulnerability":"rekey_to","smart_contract":"from pyteal import *\n\n\ndef simplified_payment_asset_contract():\n    valid_group_size = Global.group_size() == Int(2)\n\n    payment_txn_check = And(\n        Gtxn[0].type_enum() == TxnType.Payment,\n        Gtxn[0].amount() <= Int(1000000),\n        Gtxn[0].receiver() == Addr(\"XEMH3GGFQBEIWES7ZRGPD6DAHSUKUZIC7JXVOFYROTUYH7QZGU2N6AFSFE\"),\n        Gtxn[0].fee() <= Int(1000),\n        Gtxn[0].close_remainder_to() == Global.zero_address(), \n    )\n\n   \n    asset_transfer_check = And(\n        Gtxn[1].type_enum() == TxnType.AssetTransfer,\n        Gtxn[1].asset_receiver() == Addr(\"46KZVBQWAPK52Z6DUIOIL3YXH66KINGTHVYDGVGTPBRXTFJT6P2RQTJSWM\"),\n        Gtxn[1].asset_amount() <= Int(1000000),\n        Gtxn[1].fee() <= Int(1000),\n        Gtxn[1].rekey_to() == Global.zero_address(),  \n        Gtxn[1].asset_close_to() == Global.zero_address(),  \n    )\n\n    contract_logic = And(\n        valid_group_size,\n        payment_txn_check,\n        asset_transfer_check\n    )\n\n    return contract_logic\n\nif __name__ == '__main__':\n    print(compileTeal(simplified_payment_asset_contract(), mode=Mode.Signature, version=5))"}
