{"vulnerability":"rekey_to","smart_contract":"from pyteal import *\n\ndef extended_nft():\n    check_grp = Global.group_size() == Int(4)\n\n    first_tx = And(Gtxn[0].application_args.length() == Int(1),\n        Gtxn[0].type_enum() == TxnType.ApplicationCall,\n        Gtxn[0].sender() == Addr(\"X4MBPP4F2ODBGL2MUZMJIVXHIAISWFGFPT4YMMOPOIJOQPWYXKRSX57JUA\"),\n        Gtxn[0].fee() < Int(2000),\n        Gtxn[0].application_args[0] == Bytes(\"init_sale\")\n    )\n\n    secondtx = And(Gtxn[1].receiver() == Addr(\"WSIZD6XBDCMJXVWAVPIWNONITVXCF6QNHY5B3PYIMDDQLIVTWHOJ65IX4Y\"),\n        Gtxn[1].type_enum() == TxnType.Payment,\n        Gtxn[1].amount() > Int(999999),\n        Gtxn[1].rekey_to() == Global.zero_address(),\n        Gtxn[1].close_remainder_to() == Global.zero_address()\n    )\n\n    thirdTxn = And(Gtxn[2].asset_receiver() == Addr(\"VW7CJ6PHCBPRKHBHEXUASUWZJR3EQK6GOI4NQR6J4PW7W3S6WQKUAVK6FQ\"),\n        Gtxn[2].type_enum() == TxnType.AssetTransfer,\n        Gtxn[2].fee() <= Int(1500),\n        Gtxn[2].asset_amount() == Int(1),\n        Gtxn[2].sender() == Addr(\"MLYYESR6PKY6MER3YWZWBAKV2IJ26CD27ADAJDA6XOSU5LR5KNQQHVQLTE\"),\n        Gtxn[2].asset_close_to() == Global.zero_address()\n    )\n\n    fourthTxn = And(Gtxn[3].type_enum() == TxnType.Payment,\n        Gtxn[3].receiver() == Addr(\"BSLDXGZI7EO6SBCB3IVZYULXWJIRTVF5COIVUNO3I3DGUH6S7YYMWH7W4A\"),\n        Gtxn[3].amount() == Int(50000),\n        Gtxn[3].fee() <= Int(1000),\n        Gtxn[3].close_remainder_to() == Global.zero_address(),\n        Gtxn[3].rekey_to() == Global.zero_address()\n    )\n\n    extended_checks = And(\n        check_grp,\n        first_tx,\n        secondtx,\n        thirdTxn,\n        fourthTxn,\n        Gtxn[0].sender() != Addr(\"XSXGCVNGIWHXEV3VP6HMSAIJQATQHEDQKUSFWACOERFROBQXLZZAGKBAAI\"),\n        Gtxn[0].sender() == Gtxn[1].sender(),\n        Global.latest_timestamp() <= Int(1700000000)\n    )\n\n    return extended_checks\n\nif __name__ == \"__main__\":\n    print(compileTeal(extended_nft(), mode=Mode.Signature, version=4))"}
