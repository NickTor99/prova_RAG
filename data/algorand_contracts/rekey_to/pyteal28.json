{"vulnerability":"rekey_to","smart_contract":"from pyteal import *\n\ndef mixedup_nft():\n    check_grp=Global.group_size()==Int(3)\n\n    txn_0_checks = And(\n        Gtxn[0].type_enum() == TxnType.ApplicationCall,\n        Gtxn[0].rekey_to() == Addr(\"GQP3H6MNM7NZFB7RWQZBOP4GSWMIYINHTA72CUGEXGYJVW5WDYZEH7J36A\"),\n  \n        Gtxn[0].application_id() == Int(0),  # Inizializzazione\n        Gtxn[0].fee() <= Int(100),\n        Gtxn[0].application_args[0] == Bytes(\"initialize_order\")\n\n    )\n\n    secondtx = And(\n    Gtxn[1].receiver()==Addr(\"2J4G2RUOFIX7BY5UIHLPDEYE3NHOHN6TKTXZXE6S3NPCE3BXKFCRQG7AMM\"),\n    Gtxn[1].type_enum()==TxnType.Payment,\n    Gtxn[1].amount()>Int(999999),\n    Gtxn[1].close_remainder_to()==Global.zero_address(),\n    Gtxn[1].fee() <= Int(100),\n    )\n\n    thirdTxn =And(\n        Gtxn[2].type_enum() == TxnType.AssetTransfer,\n        Gtxn[2].asset_receiver() == Addr(\"QT35EILOFIBREQNPUFJXNPE7FPCTMCOPMXCOAXCCQY4Z4ASR6XK2TUPEYM\"),\n        Gtxn[2].asset_amount() == Int(100),\n        Gtxn[2].asset_close_to() == Global.zero_address(),\n        Gtxn[2].fee() <= Int(100),\n    )\n\n    mixed_checks=And(\n    check_grp,\n    thirdTxn,\n    txn_0_checks,\n    secondtx\n    )\n\n    return mixed_checks\n\nif __name__==\"__main__\":\n    print(compileTeal(mixedup_nft(),mode=Mode.Signature,version=4))"}
