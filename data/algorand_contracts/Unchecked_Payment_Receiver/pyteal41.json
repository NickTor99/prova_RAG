{"vulnerability":"Unchecked_Payment_Receiver","smart_contract":"from pyteal import *\n\ndef payment_vulnerability_contract():\n    creator_key = Bytes(\"Creator\")\n\n    handle_creation = Seq([\n        App.globalPut(creator_key, Txn.sender()),\n        Return(Int(1))\n    ])\n\n    handle_optin = Return(Int(1))\n\n    handle_closeout = Return(Int(1))\n\n    handle_updateapp = Seq([\n        Assert(Txn.sender() == App.globalGet(creator_key)),\n        Return(Int(1))\n    ])\n\n    handle_deleteapp = Seq([\n        Assert(Txn.sender() == App.globalGet(creator_key)),\n        Return(Int(1))\n    ])\n\n    handle_payment = Seq([\n        Assert(Global.group_size() >= Int(2)),\n        Assert(Txn.type_enum() == TxnType.Payment),\n        Assert(Txn.amount() > Int(0)),\n        App.globalPut(Bytes(\"Receiver\"), Txn.accounts[1]),\n        App.globalPut(Bytes(\"Amount\"), Txn.amount()),\n        Approve()\n    ])\n\n    program = Cond(\n        [Txn.application_id() == Int(0), handle_creation],\n        [Txn.on_completion() == OnComplete.OptIn, handle_optin],\n        [Txn.on_completion() == OnComplete.CloseOut, handle_closeout],\n        [Txn.on_completion() == OnComplete.UpdateApplication, handle_updateapp],\n        [Txn.on_completion() == OnComplete.DeleteApplication, handle_deleteapp],\n        [Txn.on_completion() == OnComplete.NoOp, handle_payment]\n    )\n\n    return program\n\ndef clear_state_program():\n    return Return(Int(1))\n\nif __name__ == \"__main__\":\n    print(compileTeal(payment_vulnerability_contract(), mode=Mode.Application, version=5))"}
