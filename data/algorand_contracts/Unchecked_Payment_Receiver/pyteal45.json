{"vulnerability":"Unchecked_Payment_Receiver","smart_contract":"from pyteal import *\n\ndef fund_manager():\n    owner_key = Bytes(\"Owner\")\n    total_funds_key = Bytes(\"TotalFunds\")\n\n    setup = Seq([\n        App.globalPut(owner_key, Txn.sender()),\n        App.globalPut(total_funds_key, Int(0)),\n        Return(Int(1))\n    ])\n\n    add_funds = Seq([\n        Assert(Txn.sender() == App.globalGet(owner_key)),\n        App.globalPut(total_funds_key, App.globalGet(total_funds_key) + Txn.amount()),\n        Approve()\n    ])\n\n    distribute_funds = Seq([\n        Assert(Global.group_size() == Int(2)),\n        Assert(Gtxn[0].sender() == App.globalGet(owner_key)),\n        Assert(Gtxn[0].type_enum() == TxnType.Payment),\n        Assert(App.globalGet(total_funds_key) >= Gtxn[1].amount()),\n        App.globalPut(total_funds_key, App.globalGet(total_funds_key) - Gtxn[1].amount()),\n        Approve()\n    ])\n\n    program = Cond(\n        [Txn.application_id() == Int(0), setup],\n        [Txn.on_completion() == OnComplete.NoOp, add_funds],\n        [Txn.on_completion() == OnComplete.OptIn, distribute_funds]\n    )\n\n    return program\n\ndef clear_state():\n    return Return(Int(1))\n\nif __name__ == \"__main__\":\n    print(compileTeal(fund_manager(), mode=Mode.Application, version=5))"}
