{"vulnerability":"Unchecked_Payment_Receiver","smart_contract":"from pyteal import *\n\ndef secure_fund():\n    admin_key = Bytes(\"Admin\")\n    balance_key = Bytes(\"Balance\")\n    recipient_key = Bytes(\"Recipient\")\n\n    initialize = Seq([\n        App.globalPut(admin_key, Txn.sender()),\n        App.globalPut(balance_key, Int(0)),\n        Return(Int(1))\n    ])\n\n    deposit = Seq([\n        Assert(Txn.sender() == App.globalGet(admin_key)),\n        App.globalPut(balance_key, App.globalGet(balance_key) + Txn.amount()),\n        Approve()\n    ])\n\n    set_recipient = Seq([\n        Assert(Txn.sender() == App.globalGet(admin_key)),\n        App.globalPut(recipient_key, Txn.application_args[1]),\n        Approve()\n    ])\n\n    pagamento = Seq([\n        Assert(Global.group_size() == Int(2)),\n        Assert(Gtxn[0].sender() == App.globalGet(admin_key)),\n        Assert(App.globalGet(balance_key) >= Gtxn[1].amount()),\n        App.globalPut(balance_key, App.globalGet(balance_key) - Gtxn[1].amount()),\n        Approve()\n    ])\n\n    program = Cond(\n        [Txn.application_id() == Int(0), initialize],\n        [Txn.on_completion() == OnComplete.NoOp, deposit],\n        [Txn.on_completion() == OnComplete.UpdateApplication, set_recipient],\n        [Txn.on_completion() == OnComplete.OptIn, pagamento]\n    )\n\n    return program\n\ndef clear_state():\n    return Return(Int(1))\n\nif __name__ == \"__main__\":\n    print(compileTeal(secure_fund(), mode=Mode.Application, version=5))"}
