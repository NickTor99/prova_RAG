{"vulnerability":"arbitrary_update","smart_contract":"from pyteal import *\n\n\ndef pension_management_contract():\n    total_funds_key = Bytes(\"total_funds\")\n    user_balance_prefix = Bytes(\"user_\")\n\n    def user_balance_key(account):\n        return Concat(user_balance_prefix, account)\n\n    program = Cond(\n        [Txn.application_id() == Int(0), Seq(\n            App.globalPut(total_funds_key, Int(0)),\n            Return(Int(1))\n        )],\n\n\n        [Txn.on_completion() == OnComplete.NoOp, Seq(\n            Assert(Global.group_size() == Int(2)),\n            Assert(Gtxn[0].type_enum() == TxnType.Payment),\n            Assert(Gtxn[0].receiver() == Global.current_application_address()),\n\n\n            App.globalPut(\n                user_balance_key(Gtxn[0].sender()),\n                App.globalGet(user_balance_key(Gtxn[0].sender())) + Gtxn[0].amount()\n            ),\n\n\n            App.globalPut(\n                total_funds_key,\n                App.globalGet(total_funds_key) + Gtxn[0].amount()\n            ),\n\n            Return(Int(1))\n        )],\n\n        [Txn.on_completion() == OnComplete.UpdateApplication, Seq(\n            Assert(Global.group_size() >= Int(2)),\n            App.globalPut(Txn.application_args[0], Txn.application_args[1]),\n            Return(Int(1))\n        )]\n    )\n\n    return program\n\n\nif __name__ == \"__main__\":\n    print(compileTeal(pension_management_contract(), mode=Mode.Application, version=5))"}
